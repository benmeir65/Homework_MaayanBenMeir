@page "/Lesson7" 

@using BlazorApp1.Shared.models.courses;
@using BlazorApp1.Server.Controllers;



<h1>Course Details</h1>

@if (singleCourse != null)
{
    <div>
        <p>Course Name: @singleCourse.CourseName</p>
        <p>Teacher Name: @singleCourse.TeacherName</p>
        <p>Course Credit: @singleCourse.CourseCredit</p>
        <p>Is Exam: @singleCourse.IsExam</p> 
        <input type="button" value="Update the Course" @onclick=" updateCourse " />
    </div>
}
<h2>Check String</h2> 
    הכנס מחרוזת <input type="text" @bind="stringToCheck" />  <br />    
   <input type="button" value="Update the Course" @onclick="chekStr" />




@code
{
        Courses singleCourse = new Courses();

        protected override void OnInitialized()  
        {
		singleCourse.CourseName = "Math For Beginners";
		singleCourse.TeacherName = "Daniel Levi";
		singleCourse.CourseCredits = 2;
		singleCourse.IsExam = true;
	}


        async Task chekStr()

        {
            string stringToCheck = " ";
            var getcourseResponse = await Http.GetAsync("api/CoursesController/stringToCheck");
            if(getcourseResponse.IsSuccessStatusCode == true)
            {
                singleCourse.CourseName = getcurse.Content.ReadAsStringAsync<Course>().Result;
            }

        }

        async Task updateCourse() 
        {
            var PostCourseResponse = await Http.PostAsync("api/ CoursesController /singleCourse");
            if (PostCourseResponse.IsSuccessStatusCode == true)
            {
                singleCourse.CourseName = PostResponse.Content.ReadFromJsonAsync<Course>().Result;
                singleCourse = PostResponse.Content.ReadFromJsonAsync<Course>().Result;

            }
        }
        }
